/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sourceforge.playerstage.Jplayercore;

public class Device {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Device(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Device obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected Device() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      playercore_javaJNI.delete_Device(swigCPtr);
    }
    swigCPtr = 0;
  }

  public Device(player_devaddr_t addr, Driver driver) {
    this(playercore_javaJNI.new_Device(player_devaddr_t.getCPtr(addr), Driver.getCPtr(driver)), true);
  }

  public int Subscribe(MessageQueue sub_queue) {
    return playercore_javaJNI.Device_Subscribe(swigCPtr, MessageQueue.getCPtr(sub_queue));
  }

  public int Unsubscribe(MessageQueue sub_queue) {
    return playercore_javaJNI.Device_Unsubscribe(swigCPtr, MessageQueue.getCPtr(sub_queue));
  }

  public void PutMsg(MessageQueue resp_queue, short type, short subtype, SWIGTYPE_p_void src, long len, SWIGTYPE_p_double timestamp) {
    playercore_javaJNI.Device_PutMsg__SWIG_0(swigCPtr, MessageQueue.getCPtr(resp_queue), type, subtype, SWIGTYPE_p_void.getCPtr(src), len, SWIGTYPE_p_double.getCPtr(timestamp));
  }

  public void PutMsg(MessageQueue resp_queue, player_msghdr_t hdr, SWIGTYPE_p_void src) {
    playercore_javaJNI.Device_PutMsg__SWIG_1(swigCPtr, MessageQueue.getCPtr(resp_queue), player_msghdr_t.getCPtr(hdr), SWIGTYPE_p_void.getCPtr(src));
  }

  public Message Request(MessageQueue resp_queue, short type, short subtype, SWIGTYPE_p_void src, long len, SWIGTYPE_p_double timestamp, boolean threaded) {
    long cPtr = playercore_javaJNI.Device_Request__SWIG_0(swigCPtr, MessageQueue.getCPtr(resp_queue), type, subtype, SWIGTYPE_p_void.getCPtr(src), len, SWIGTYPE_p_double.getCPtr(timestamp), threaded);
    return (cPtr == 0) ? null : new Message(cPtr, false);
  }

  public Message Request(MessageQueue resp_queue, short type, short subtype, SWIGTYPE_p_void src, long len, SWIGTYPE_p_double timestamp) {
    long cPtr = playercore_javaJNI.Device_Request__SWIG_1(swigCPtr, MessageQueue.getCPtr(resp_queue), type, subtype, SWIGTYPE_p_void.getCPtr(src), len, SWIGTYPE_p_double.getCPtr(timestamp));
    return (cPtr == 0) ? null : new Message(cPtr, false);
  }

  public static boolean MatchDeviceAddress(player_devaddr_t addr1, player_devaddr_t addr2) {
    return playercore_javaJNI.Device_MatchDeviceAddress(player_devaddr_t.getCPtr(addr1), player_devaddr_t.getCPtr(addr2));
  }

  public void setNext(Device next) {
    playercore_javaJNI.set_Device_next(swigCPtr, Device.getCPtr(next));
  }

  public Device getNext() {
    long cPtr = playercore_javaJNI.get_Device_next(swigCPtr);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public void setAddr(player_devaddr_t addr) {
    playercore_javaJNI.set_Device_addr(swigCPtr, player_devaddr_t.getCPtr(addr));
  }

  public player_devaddr_t getAddr() {
    long cPtr = playercore_javaJNI.get_Device_addr(swigCPtr);
    return (cPtr == 0) ? null : new player_devaddr_t(cPtr, false);
  }

  public void setDrivername(String drivername) {
    playercore_javaJNI.set_Device_drivername(swigCPtr, drivername);
  }

  public String getDrivername() {
    return playercore_javaJNI.get_Device_drivername(swigCPtr);
  }

  public void setDriver(Driver driver) {
    playercore_javaJNI.set_Device_driver(swigCPtr, Driver.getCPtr(driver));
  }

  public Driver getDriver() {
    long cPtr = playercore_javaJNI.get_Device_driver(swigCPtr);
    return (cPtr == 0) ? null : new Driver(cPtr, false);
  }

  public void setQueues(SWIGTYPE_p_p_MessageQueue queues) {
    playercore_javaJNI.set_Device_queues(swigCPtr, SWIGTYPE_p_p_MessageQueue.getCPtr(queues));
  }

  public SWIGTYPE_p_p_MessageQueue getQueues() {
    long cPtr = playercore_javaJNI.get_Device_queues(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_MessageQueue(cPtr, false);
  }

  public void setLen_queues(long len_queues) {
    playercore_javaJNI.set_Device_len_queues(swigCPtr, len_queues);
  }

  public long getLen_queues() {
    return playercore_javaJNI.get_Device_len_queues(swigCPtr);
  }

}
