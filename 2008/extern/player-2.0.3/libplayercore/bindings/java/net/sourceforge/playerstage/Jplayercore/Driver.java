/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sourceforge.playerstage.Jplayercore;

public class Driver {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Driver(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Driver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected Driver() {
    this(0, false);
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      playercore_javaJNI.delete_Driver(swigCPtr);
    }
    swigCPtr = 0;
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void setDriverthread(SWIGTYPE_p_pthread_t driverthread) {
    playercore_javaJNI.set_Driver_driverthread(swigCPtr, SWIGTYPE_p_pthread_t.getCPtr(driverthread));
  }

  public SWIGTYPE_p_pthread_t getDriverthread() {
    return new SWIGTYPE_p_pthread_t(playercore_javaJNI.get_Driver_driverthread(swigCPtr), true);
  }

  public void Lock() {
    playercore_javaJNI.Driver_Lock(swigCPtr);
  }

  public void Unlock() {
    playercore_javaJNI.Driver_Unlock(swigCPtr);
  }

  public void setRet_queue(MessageQueue ret_queue) {
    playercore_javaJNI.set_Driver_ret_queue(swigCPtr, MessageQueue.getCPtr(ret_queue));
  }

  public MessageQueue getRet_queue() {
    long cPtr = playercore_javaJNI.get_Driver_ret_queue(swigCPtr);
    return (cPtr == 0) ? null : new MessageQueue(cPtr, false);
  }

  public void Publish(player_devaddr_t addr, MessageQueue queue, short type, short subtype, SWIGTYPE_p_void src, long len, SWIGTYPE_p_double timestamp) {
    playercore_javaJNI.Driver_Publish__SWIG_0(swigCPtr, player_devaddr_t.getCPtr(addr), MessageQueue.getCPtr(queue), type, subtype, SWIGTYPE_p_void.getCPtr(src), len, SWIGTYPE_p_double.getCPtr(timestamp));
  }

  public void Publish(player_devaddr_t addr, MessageQueue queue, short type, short subtype, SWIGTYPE_p_void src, long len) {
    playercore_javaJNI.Driver_Publish__SWIG_1(swigCPtr, player_devaddr_t.getCPtr(addr), MessageQueue.getCPtr(queue), type, subtype, SWIGTYPE_p_void.getCPtr(src), len);
  }

  public void Publish(player_devaddr_t addr, MessageQueue queue, short type, short subtype, SWIGTYPE_p_void src) {
    playercore_javaJNI.Driver_Publish__SWIG_2(swigCPtr, player_devaddr_t.getCPtr(addr), MessageQueue.getCPtr(queue), type, subtype, SWIGTYPE_p_void.getCPtr(src));
  }

  public void Publish(player_devaddr_t addr, MessageQueue queue, short type, short subtype) {
    playercore_javaJNI.Driver_Publish__SWIG_3(swigCPtr, player_devaddr_t.getCPtr(addr), MessageQueue.getCPtr(queue), type, subtype);
  }

  public void Publish(MessageQueue queue, player_msghdr_t hdr, SWIGTYPE_p_void src) {
    playercore_javaJNI.Driver_Publish__SWIG_4(swigCPtr, MessageQueue.getCPtr(queue), player_msghdr_t.getCPtr(hdr), SWIGTYPE_p_void.getCPtr(src));
  }

  public void setDevice_addr(player_devaddr_t device_addr) {
    playercore_javaJNI.set_Driver_device_addr(swigCPtr, player_devaddr_t.getCPtr(device_addr));
  }

  public player_devaddr_t getDevice_addr() {
    long cPtr = playercore_javaJNI.get_Driver_device_addr(swigCPtr);
    return (cPtr == 0) ? null : new player_devaddr_t(cPtr, false);
  }

  public void setSubscriptions(int subscriptions) {
    playercore_javaJNI.set_Driver_subscriptions(swigCPtr, subscriptions);
  }

  public int getSubscriptions() {
    return playercore_javaJNI.get_Driver_subscriptions(swigCPtr);
  }

  public void setEntries(int entries) {
    playercore_javaJNI.set_Driver_entries(swigCPtr, entries);
  }

  public int getEntries() {
    return playercore_javaJNI.get_Driver_entries(swigCPtr);
  }

  public void setAlwayson(boolean alwayson) {
    playercore_javaJNI.set_Driver_alwayson(swigCPtr, alwayson);
  }

  public boolean getAlwayson() {
    return playercore_javaJNI.get_Driver_alwayson(swigCPtr);
  }

  public void setInQueue(MessageQueue InQueue) {
    playercore_javaJNI.set_Driver_InQueue(swigCPtr, MessageQueue.getCPtr(InQueue));
  }

  public MessageQueue getInQueue() {
    long cPtr = playercore_javaJNI.get_Driver_InQueue(swigCPtr);
    return (cPtr == 0) ? null : new MessageQueue(cPtr, false);
  }

  public Driver(ConfigFile cf, int section, boolean overwrite_cmds, long queue_maxlen, int interf) {
    this(playercore_javaJNI.new_Driver__SWIG_0(ConfigFile.getCPtr(cf), section, overwrite_cmds, queue_maxlen, interf), true);
    playercore_javaJNI.Driver_director_connect(this, swigCPtr);
  }

  public Driver(ConfigFile cf, int section, boolean overwrite_cmds, long queue_maxlen) {
    this(playercore_javaJNI.new_Driver__SWIG_1(ConfigFile.getCPtr(cf), section, overwrite_cmds, queue_maxlen), true);
    playercore_javaJNI.Driver_director_connect(this, swigCPtr);
  }

  public Driver(ConfigFile cf, int section, boolean overwrite_cmds) {
    this(playercore_javaJNI.new_Driver__SWIG_2(ConfigFile.getCPtr(cf), section, overwrite_cmds), true);
    playercore_javaJNI.Driver_director_connect(this, swigCPtr);
  }

  public Driver(ConfigFile cf, int section) {
    this(playercore_javaJNI.new_Driver__SWIG_3(ConfigFile.getCPtr(cf), section), true);
    playercore_javaJNI.Driver_director_connect(this, swigCPtr);
  }

  public int GetError() {
    return playercore_javaJNI.Driver_GetError(swigCPtr);
  }

  public int Subscribe(player_devaddr_t addr) {
    return playercore_javaJNI.Driver_Subscribe(swigCPtr, player_devaddr_t.getCPtr(addr));
  }

  public int Unsubscribe(player_devaddr_t addr) {
    return playercore_javaJNI.Driver_Unsubscribe(swigCPtr, player_devaddr_t.getCPtr(addr));
  }

  public int Setup() {
    return playercore_javaJNI.Driver_Setup(swigCPtr);
  }

  public int Shutdown() {
    return playercore_javaJNI.Driver_Shutdown(swigCPtr);
  }

  public void Main() {
    playercore_javaJNI.Driver_Main(swigCPtr);
  }

  public void MainQuit() {
    playercore_javaJNI.Driver_MainQuit(swigCPtr);
  }

  public void ProcessMessages(int maxmsgs) {
    playercore_javaJNI.Driver_ProcessMessages__SWIG_0(swigCPtr, maxmsgs);
  }

  public void ProcessMessages() {
    playercore_javaJNI.Driver_ProcessMessages__SWIG_1(swigCPtr);
  }

  public int ProcessMessage(MessageQueue resp_queue, player_msghdr_t hdr, SWIGTYPE_p_void data) {
    return playercore_javaJNI.Driver_ProcessMessage(swigCPtr, MessageQueue.getCPtr(resp_queue), player_msghdr_t.getCPtr(hdr), SWIGTYPE_p_void.getCPtr(data));
  }

  public void Update() {
    playercore_javaJNI.Driver_Update(swigCPtr);
  }

}
